{"version":3,"sources":["logo.svg","component/Searched/Meal.js","component/Searched/MealList.js","component/Searched/Searched.js","App.js","reportWebVitals.js","index.js"],"names":["Meal","meal","useState","imageUrl","setImageUrl","useEffect","fetch","id","then","response","json","data","image","catch","console","log","src","alt","title","className","readyInMinutes","servings","href","sourceUrl","target","MealList","mealData","nutrients","calories","protein","fat","carbohydrates","meals","map","App","setMealData","setCalories","api_url","setApi_Url","isVeg","setIsVeg","getMealData","type","placeholder","onChange","e","value","onClick","checked","Searched","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAAe,I,2CCEA,SAASA,EAAT,GAAsB,IAAPC,EAAM,EAANA,KAC1B,EAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAgBC,EAAhB,KAUA,OATAC,qBAAU,WACNC,MAAM,uCAAD,OAAwCL,EAAKM,GAA7C,gFACJC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACHP,EAAYO,EAAKC,UAClBC,OAAM,WACLC,QAAQC,IAAI,cAElB,CAACd,EAAKM,KAEJ,oCACI,qBAAKS,IAAOb,EAAUc,IAAM,YAC5B,6BAAKhB,EAAKiB,QACV,qBAAIC,UAAY,cAAhB,UACI,oDAAuBlB,EAAKmB,eAAgB,cAC5C,sDAAyBnB,EAAKoB,eAElC,mBAAGC,KAAQrB,EAAKsB,UAAWC,OAAS,SAApC,8BCnBG,SAASC,EAAT,GAA8B,IAAXC,EAAU,EAAVA,SACxBC,EAAYD,EAASC,UAC3B,OACI,iCACI,0BAASR,UAAY,YAArB,UACI,6BAAKQ,EAAUT,QACf,+BACI,4CAAeS,EAAUC,YACzB,2CAAcD,EAAUE,WACxB,uCAAUF,EAAUG,OACpB,iDAAoBH,EAAUI,uBAGtC,yBAASZ,UAAY,QAArB,SACKO,EAASM,MAAMC,KAAI,SAAChC,GACjB,OAAO,cAACD,EAAD,CAAsBC,KAAQA,GAAjBA,EAAKM,YCmC9B2B,MAjDf,WACE,MAAgChC,mBAAS,MAAzC,mBAAOwB,EAAP,KAAiBS,EAAjB,KACA,EAAgCjC,mBAAS,KAAzC,mBAAO0B,EAAP,KAAiBQ,EAAjB,KACA,EAA8BlC,mBAAS,IAAvC,mBAAOmC,EAAP,KAAgBC,EAAhB,KACA,EAAyBpC,oBAAS,GAAlC,mBAAOqC,EAAP,KAAaC,EAAb,KACA,SAASC,IACPH,EAAW,8GAAD,OAA+GC,EAA/G,2BAAuIX,IACjJtB,MACE+B,GAEC7B,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLwB,EAAYxB,MAEbE,OAAM,WACLC,QAAQC,IAAI,YAWlB,OACE,sBAAKI,UAAU,MAAf,UACE,wDACA,0BAASA,UAAU,WAAnB,UACE,uBACEuB,KAAK,SACLC,YAAY,uBACZC,SAdR,SAAsBC,GACpBT,EAAYS,EAAErB,OAAOsB,QAcf3B,UAAY,gBAEd,wBAAQ4B,QAASN,EAAjB,oCAIF,gCACA,uBAAOC,KAAK,WAAWI,MAAM,uBAAuBC,QAASN,EAAaO,QAAUT,EAAOK,SAnB/F,WACEJ,GAAUD,GACVzB,QAAQC,IAAIwB,EAAQF,IAiBsGlB,UAAY,mBACpI,gDAECO,GAAY,cAACD,EAAD,CAAUC,SAAUA,QC3BxBQ,MAff,WACE,OACE,qBAAKf,UAAU,MAAf,SAOI,cAAC8B,EAAD,OCFOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.34d5a090.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useState,useEffect} from \"react\"\r\nimport \"../../App.css\"\r\nexport default function Meal({meal}){\r\n    const [imageUrl,setImageUrl] = useState(\"\");\r\n    useEffect(()=>{\r\n        fetch(`https://api.spoonacular.com/recipes/${meal.id}/information?apiKey=a60c615ee6064d6e856d775e2c075b59&includeNutrition=false`)\r\n        .then((response) => response.json())\r\n        .then((data) =>{\r\n            setImageUrl(data.image);\r\n        }).catch(()=>{\r\n            console.log(\"error\")\r\n        })\r\n    },[meal.id])\r\n    return(\r\n        <article>\r\n            <img src = {imageUrl} alt = \"recepie\" />\r\n            <h1>{meal.title}</h1>\r\n            <ul className = \"instruction\">\r\n                <li>Preparation time: {meal.readyInMinutes}{\" minutes\"}</li>\r\n                <li>Number of servings: {meal.servings}</li>\r\n            </ul>\r\n            <a href = {meal.sourceUrl} target = \"_blank\">Go to Recepie</a>\r\n        </article>\r\n    )\r\n}","import Meal from \"./Meal\";\r\nimport \"../../App.css\"\r\nexport default function MealList({mealData}){\r\n    const nutrients = mealData.nutrients;\r\n    return(\r\n        <main>\r\n            <section className = \"nutrients\">\r\n                <h2>{nutrients.title}</h2>\r\n                <ul>\r\n                    <li>calories: {nutrients.calories}</li>\r\n                    <li>protein: {nutrients.protein}</li>\r\n                    <li>fat: {nutrients.fat}</li>\r\n                    <li>carbohydrates: {nutrients.carbohydrates}</li>\r\n                </ul>\r\n            </section>\r\n            <section className = \"meals\">\r\n                {mealData.meals.map((meal)=>{\r\n                    return(<Meal key = {meal.id} meal = {meal} />)\r\n                })}\r\n            </section>\r\n        </main>\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport MealList from \"./MealList\";\r\nimport \"../../App.css\"\r\nfunction App() {\r\n  const [mealData, setMealData] = useState(null);\r\n  const [calories, setCalories] = useState(2000);\r\n  const [api_url, setApi_Url] = useState('');\r\n  const [isVeg,setIsVeg] = useState(false);\r\n  function getMealData() {\r\n    setApi_Url(`https://api.spoonacular.com/mealplanner/generate?apiKey=a60c615ee6064d6e856d775e2c075b59&timeFrame=day&veg=${isVeg}&targetCalories=${calories}`)\r\n    fetch(\r\n      api_url\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setMealData(data);\r\n      })\r\n      .catch(() => {\r\n        console.log(\"error\");\r\n      });\r\n  }\r\n\r\n  function handleChange(e) {\r\n    setCalories(e.target.value);\r\n  }\r\n  function checkBoxHandler(){\r\n    setIsVeg(!isVeg);\r\n    console.log(isVeg + api_url);\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Welcome to Calorie Hub</h1>\r\n      <section className=\"controls\">\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Calories (e.g. 2000)\"\r\n          onChange={handleChange}\r\n          className = \"searchInput\"\r\n        />\r\n        <button onClick={getMealData}>Get Daily Meal Plan</button>\r\n        \r\n        \r\n      </section>\r\n      <div>\r\n      <input type=\"checkbox\" value=\"Only Vegetarian food\" onClick={getMealData} checked= {isVeg} onChange = {checkBoxHandler} className = \"checkbox-style\"></input>\r\n      <label>Only veg</label>\r\n      </div>\r\n      {mealData && <MealList mealData={mealData} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Main from './component/Main/Main';\nimport Searched from './component/Searched/Searched';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    {/* //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n        // <Main /> */}\n        <Searched />\n    {/* //   </header> */}\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}